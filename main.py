import os
import asyncio
import logging
from dotenv import load_dotenv
import discord
from discord import app_commands
from telegram.ext import Application, MessageHandler, filters, ContextTypes
from telegram import Update
from datetime import datetime, UTC

def log_action(message):
    print(f"[LOG] {message}", flush=True)
    logging.info(message)

stats = {
    'ping_count': 0,
    'users': set()
}

load_dotenv()
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
DISCORD_BOT_TOKEN = os.getenv("DISCORD_BOT_TOKEN")
TARGET_CHANNEL_ID = int(os.getenv("TARGET_CHANNEL_ID"))
HEADER_TO_REMOVE = os.getenv("HEADER_TO_REMOVE")
RP_BOT_ID = int(os.getenv("RP_BOT_ID"))

telegram_app = Application.builder().token(TELEGRAM_BOT_TOKEN).build()

async def handle_telegram_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("[DEBUG] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Telegram!")
    message = update.message
    if not message:
        print("[DEBUG] –ù–µ—Ç –æ–±—ä–µ–∫—Ç–∞ message ‚Äî –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º.")
        return
    print(f"[DEBUG] message.from_user.id = {getattr(message.from_user, 'id', None)} RP_BOT_ID = {RP_BOT_ID}")
    if message.from_user.id != RP_BOT_ID:
        print("[DEBUG] –ù–µ —Ç–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º.")
        return
    if not message.text:
        print("[DEBUG] –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º.")
        return

    content = message.text.strip()
    print(f"[DEBUG] –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç: {content!r}")
    if content.startswith(HEADER_TO_REMOVE):
        body = content[len(HEADER_TO_REMOVE):].lstrip("\n").strip()
        print("[DEBUG] HEADER_TO_REMOVE –Ω–∞–π–¥–µ–Ω ‚Äî —Ç–µ–ª–æ:", body)
    else:
        body = content
        print("[DEBUG] HEADER_TO_REMOVE ‚Äî –Ω–µ—Ç, —Ç–µ–ª–æ:", body)

    if body:
        print("[DEBUG] –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∫–∞–Ω–∞–ª Discord:", TARGET_CHANNEL_ID)
        channel = discord_client.get_channel(TARGET_CHANNEL_ID)
        if channel:
            print(f"[DEBUG] –ö–∞–Ω–∞–ª Discord –Ω–∞–π–¥–µ–Ω: {channel}. –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ‚Ä¶")
            await channel.send(f"@everyone\n{body}")
            log_action(f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ Telegram: {body}")
        else:
            print("[ERR] –ö–∞–Ω–∞–ª Discord –Ω–µ –Ω–∞–π–¥–µ–Ω!", flush=True)

telegram_app.add_handler(
    MessageHandler(filters.TEXT & ~filters.COMMAND, handle_telegram_message)
)

intents = discord.Intents.default()
intents.message_content = True
discord_client = discord.Client(intents=intents)
tree = app_commands.CommandTree(discord_client)

@discord_client.event
async def on_ready():
    start_time = datetime.now(UTC)
    activity = discord.Activity(
        type=discord.ActivityType.watching,
        name="üì∫üü£ Twitch: ilven69 üëæ",
        start=start_time
    )
    await discord_client.change_presence(activity=activity, status=discord.Status.online)
    await tree.sync()
    print(f"[INFO] Discord-–±–æ—Ç {discord_client.user} –≥–æ—Ç–æ–≤!", flush=True)
    print(f"[INFO] Slash-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!", flush=True)
    log_action("Discord-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

@tree.command(name="ping", description="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞")
async def ping(interaction: discord.Interaction):
    print(f"[LOG] ping –æ—Ç {interaction.user.id}", flush=True)
    if interaction.channel_id != TARGET_CHANNEL_ID:
        log_action(f"–ü–æ–ø—ã—Ç–∫–∞ /ping –Ω–µ –≤ —Ç–æ–º –∫–∞–Ω–∞–ª–µ: –æ—Ç {interaction.user} (id: {interaction.user.id})")
        await interaction.response.send_message(
            "—Å–ª—ã—à—å –∏–¥–∏ –Ω–∞—Ö—É–π", ephemeral=True
        )
        return
    stats['ping_count'] += 1
    stats['users'].add(interaction.user.id)
    log_action(f"/ping –∏—Å–ø–æ–ª–Ω–µ–Ω–∞: –æ—Ç {interaction.user} (id: {interaction.user.id})")
    await interaction.response.send_message("–ø–æ–Ω–≥ –±–ª—è—Ç—å, –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ –µ–±–∏ –µ–≥–æ")

@tree.command(name="stats", description="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞")
async def stats_command(interaction: discord.Interaction):
    msg = (
        f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n"
        f"- /ping –≤—ã–∑–≤–∞–Ω: {stats['ping_count']} —Ä–∞–∑\n"
        f"- –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(stats['users'])}\n"
    )
    print(f"[LOG] stats –≤—ã–∑–≤–∞–ª: {interaction.user.id}", flush=True)
    log_action(f"/stats –∑–∞–ø—Ä–æ—à–µ–Ω–∞: –æ—Ç {interaction.user} (id: {interaction.user.id})")
    await interaction.response.send_message(msg)

async def main():
    print('[LOG] Telegram initializing...', flush=True)
    await telegram_app.initialize()
    tg_task = asyncio.create_task(telegram_app.start())
    print('[LOG] Telegram –∑–∞–ø—É—â–µ–Ω!', flush=True)
    await discord_client.start(DISCORD_BOT_TOKEN)
    print('[LOG] Discord –∑–∞–ø—É—â–µ–Ω!', flush=True)
    await tg_task

if __name__ == '__main__':
    asyncio.run(main())
